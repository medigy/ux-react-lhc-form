{"version":3,"sources":["../../src/index.tsx","App.tsx","index.tsx"],"names":["utf8","require","LHCFormComponent","componentDidMount","apiURL","responseData","dataContent","atob","JSON","LForms","getLHCFormData","fetchData","Promise","fetch","method","headers","Accept","res","resolve","render","id","encodeURIComponent","lhcFormRef","React","createRef","getData","formData","current","console","log","App","ref","LHCFormPath","accessToken","type","value","onClick","ReactDOM","document","getElementById"],"mappings":"6OAEA,IAAMA,EAAOC,EAAb,KA2CaC,EAAb,Y,QAAA,a,8CAISC,kBAAoB,WACzB,IAAIC,EAAM,GAAc,QAAxB,YACAA,EAASA,gBACFA,EADEA,iBACqB,QADrBA,YAEFA,EAFEA,iBAEqB,QAF9BA,YAGgD,YAAhD,GACAC,MAAkB,YAChB,GAAI,YAAJ,EAA+B,CAC7B,IAAIC,EAAsBC,KAAKF,EAA/B,SACAC,EAAcN,SAAdM,GACAA,EAAcE,WAAdF,GACAG,iDAOC,EAAAC,eAAiB,WAOtB,OANiBD,+CAAjB,IAQM,EAAAE,UAAY,YAClB,OAAO,IAAIC,SAAQ,YACjBC,MAAMT,EAAQ,CACZU,OADY,MAEZC,QAAS,CACPC,OADO,mBAEP,eAAgB,sBAJpBH,MAOQ,mBAASI,EAAT,UAPRJ,MAQQ,YACJK,QATJL,OAWS,YACLK,Y,EA7CV,O,EAAA,G,EAAA,G,6EAAA,mBAmBSC,WACL,OAAO,+BAAKC,GAAG,uBApBnB,gBCvCMhB,G,OAAc,UAHM,8EAGN,YAAmBiB,mBAFd,mFAEL,gBADG,WAGjBC,EAAwDC,IAAMC,YAY9DC,EAAU,WAAa,IAAD,EACpBC,EAEO,UAAGJ,EAAWK,eAAd,aAAG,EAAoBjB,iBACpCkB,QAAQC,IAAIH,IAGCI,EAlBH,WACV,OAAO,6BACL,kBAAC,EAAD,CACEC,IAAKT,EACLU,YAAa5B,EACb6B,YAPsB,qEASxB,2BAAOC,KAAK,SAASC,MAAM,gBAAgBC,QAASX,MCVxDY,IAASlB,OAAO,kBAAC,EAAD,MAASmB,SAASC,eAAe,U","file":"static/js/main.4b3109cf.chunk.js","sourcesContent":["import * as React from 'react'\nimport * as LForms from 'lforms';\nconst utf8 = require(\"utf8\");\ninterface ILHCFormProps {\n  readonly LHCFormPath: string;\n  readonly accessToken: string;\n}\ninterface ILHCFormState {\n  loader: boolean;\n}\ninterface ILHCFormResponse {\n  file_name: string;\n  file_path: string;\n  size: number;\n  encoding: string;\n  content_sha256: string;\n  blob_id: string;\n  commit_id: string;\n  content: string;\n  ref: string;\n  last_commit_id: string;\n}\ninterface IAnswers {\n  code: string;\n  text: string;\n}\ninterface ILHCFormItems {\n  answerCardinality: { [key: string]: string };\n  answers: Array<IAnswers>;\n  dataType: string;\n  linkId: string;\n  question: string;\n  questionCardinality: { [key: string]: string };\n  questionCode: string;\n  questionCodeSystem: string;\n  value: IAnswers;\n}\nexport interface ILHCFormData {\n  code: string;\n  hasSavedData: boolean;\n  lformsVersion: string;\n  name: string;\n  template: string;\n  items: Array<ILHCFormItems>;\n}\nexport class LHCFormComponent extends React.Component<\n  ILHCFormProps,\n  ILHCFormState\n  > {\n  public componentDidMount = (): void => {\n    let apiURL: string = `${this.props.LHCFormPath}`;\n    apiURL = apiURL.includes(\"?\")\n      ? `${apiURL}&access_token=${this.props.accessToken}`\n      : `${apiURL}?access_token=${this.props.accessToken}`;\n    const responseData: Promise<ILHCFormResponse> = this.fetchData(apiURL);\n    responseData.then((responseData: ILHCFormResponse) => {\n      if (\"content\" in responseData) {\n        let dataContent: string = atob(responseData.content);\n        dataContent = utf8.decode(dataContent);\n        dataContent = JSON.parse(dataContent);\n        LForms.Util.addFormToPage(dataContent, \"gitLabLHCFormData\");\n      }\n    });\n  };\n  public render(): React.ReactElement<ILHCFormProps> {\n    return <div id=\"gitLabLHCFormData\"></div>;\n  }\n  public getLHCFormData = (): Array<ILHCFormData> => {\n    const formData = LForms.Util.getFormData(\n      \"#gitLabLHCFormData\",\n      false,\n      false,\n      true\n    );\n    return formData;\n  };\n  private fetchData = (apiURL: string): Promise<ILHCFormResponse> => {\n    return new Promise((resolve) => {\n      fetch(apiURL, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then((res) => res.json())\n        .then((response) => {\n          resolve(response);\n        })\n        .catch((error) => {\n          resolve(error);\n        });\n    });\n  };\n}\n","import React from 'react'\nimport * as LHCForm from '@medigy/ux-react-lhc-form';\nimport '@medigy/ux-react-lhc-form/dist/index.css';\nconst gitLabApi: string = 'https://devl.gl.next.infra.medigy.com/api/v4/projects/8387/repository/files';\nconst filePath: string = 'Questionnaires/Privacy/Medigy Privacy Guidelines Evaluation Facet.lhc-form.json';\nconst branch: string = 'master';\nconst apiURL: string = `${gitLabApi}/${encodeURIComponent(filePath)}?ref=${branch}`;\nconst accessToken: string = 'd8453ffd16d008806539507e6c55e59e1fb16f27a2bea5b877888e5f5bd02b63';\nconst lhcFormRef: React.RefObject<LHCForm.LHCFormComponent> = React.createRef();\nconst App = () => {\n  return <div>\n    <LHCForm.LHCFormComponent\n      ref={lhcFormRef}\n      LHCFormPath={apiURL}\n      accessToken={accessToken}\n    />\n    <input type='button' value='Get Form Data' onClick={getData} />\n  </div>\n}\n// To get data from the LHC Form\nconst getData = (): void => {\n  const formData:\n    | Array<LHCForm.ILHCFormData>\n    | undefined = lhcFormRef.current?.getLHCFormData();\n  console.log(formData);\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}